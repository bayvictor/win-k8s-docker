Notes:
source:https://www.quora.com/What-programming-language-is-recommended-for-fast-GUI-development-on-the-desktop-Windows-Linux-that-requires-a-low-latency-nice-looking-interface-that-isnt-C++

(Ways 1) The ONLY way to do cross platform correctly is use good engineering practice and design. Consolidate all of your business logic in a shared library, and invoke this library from a NATIVE UI. The native UI would be built with C# or WPF on Windows, Swift on OSX, and GTK on Linux. This is the approach that any commercial cross-platform application follows.
(Ways 2) Just tell PySide to import the damn .ui file and you already have one layer of XML.
A really nice XML based tool for UI design is Mozilla XUL. It can be used with multiple languages, but JavaScript is the most common. Mozilla is often overlooked as a cross-platform UI framework, but it is one of the most mature.
(Ways 3) My favorite such framework is still Apple’s Cocoa and Cocoa touch, which means Objective-C or Swift. The framework alone is not enough, of course: The program needs to be designed with responsiveness in mind.


===========
source: https://blog.resellerclub.com/the-6-best-python-gui-frameworks-for-developers/
list of 6 Best Python GUI Frameworks: Kivy, PyQt, Tkinter, WxPython, PyGUI, PySide.

Kivy
Kivy is an OpenGL ES 2 accelerated framework for the creation of new user interfaces. It supports multiple platforms namely Windows, MacOSX, Linux, Android iOS and Raspberry Pi. It is open source and comes with over 20 widgets in its toolkit.
PyQT
PyQT is one of the favoured cross-platform Python bindings implementing the Qt library for the Qt (owned by Nokia) application development framework. Currently, PyQT is available for Unix/Linux, Windows, Mac OS X and Sharp Zaurus. It combines the best of Python and Qt and it up to the programmer to decide whether to create a program by coding or using Qt Designer to create visual dialogs.
It is available in both, commercial as well as GPL license. Although some features may not be available in the free version, if your application is open source, then you can use it under the free license.

Tkinter
Tkinter is commonly bundled with Python, using Tk and is Python’s standard GUI framework. It is popular for its simplicity and graphical user interface. It is open source and available under the Python License.
One of the advantages of choosing Tkinter is that since it comes by default, there is an abundance of resources, both codes and reference books. Also with the community being old and active, there are many users who can help you out in case of doubts. Here are some examples to get you started.

WxPython
WxPython is an open source wrapper for cross-platform GUI library WxWidgets (earlier known as WxWindows) and implemented as a Python extension module. With WxPython you as a developer can create native applications for Windows, Mac OS and Unix.
If you’re just beginning to develop applications in WxPython, here is a good simple tutorial you can go through.

PyGUI
PyGUI is a graphical application cross-platform framework for Unix, Macintosh and Windows. Compared to some other GUI frameworks, PyGUI is by far the simplest and lightweight of them all, as the API is purely in sync with Python.PyGUI inserts very less code between the GUI platform and Python application, hence the display of the application usually displays the natural GUI of the platform.
PySide
PySide is a free and cross-platform GUI toolkit Qt initiated and sponsored by Nokia, Qt is a UI framework and a cross-platform application. PySide currently supports Linux/X11, Mac OS X, Maemo and Windows and, support for Android is in the plans for the near future.PySide provides tools to works with multimedia, XML documents, network, databases and GUI. A key feature of PySide is its API compatibility with PyQt4, so if you wish to migrate to PySide then the process will be hassle-free.
Ending Note: 
These are some of the widely used and best Python GUI frameworks available. These frameworks help developers create GUI applications in an easy and secure manner. Depending on your requirements you can choose the Python GUI framework that is best suited for you.

